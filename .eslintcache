[{"/Users/Densie/Documents/React/portfolio/src/reportWebVitals.js":"1","/Users/Densie/Documents/React/portfolio/src/App.js":"2","/Users/Densie/Documents/React/portfolio/src/pages.js":"3","/Users/Densie/Documents/React/portfolio/src/index.js":"4","/Users/Densie/Documents/React/portfolio/src/form-submission-handler.js":"5"},{"size":362,"mtime":1610089377020,"results":"6","hashOfConfig":"7"},{"size":851,"mtime":1610337903086,"results":"8","hashOfConfig":"7"},{"size":13818,"mtime":1610949335167,"results":"9","hashOfConfig":"7"},{"size":318,"mtime":1610140685564,"results":"10","hashOfConfig":"7"},{"size":3691,"mtime":1610337481712,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9aapnl",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/Densie/Documents/React/portfolio/src/reportWebVitals.js",[],"/Users/Densie/Documents/React/portfolio/src/App.js",[],"/Users/Densie/Documents/React/portfolio/src/pages.js",["23","24","25","26","27","28"],"/Users/Densie/Documents/React/portfolio/src/index.js",[],"/Users/Densie/Documents/React/portfolio/src/form-submission-handler.js",["29","30"],"(function() {\n    // get all data in form and return object\n    function getFormData(form) {\n      var elements = form.elements;\n      var honeypot;\n  \n      var fields = Object.keys(elements).filter(function(k) {\n        if (elements[k].name === \"honeypot\") {\n          honeypot = elements[k].value;\n          return false;\n        }\n        return true;\n      }).map(function(k) {\n        if(elements[k].name !== undefined) {\n          return elements[k].name;\n        // special case for Edge's html collection\n        }else if(elements[k].length > 0){\n          return elements[k].item(0).name;\n        }\n      }).filter(function(item, pos, self) {\n        return self.indexOf(item) == pos && item;\n      });\n  \n      var formData = {};\n      fields.forEach(function(name){\n        var element = elements[name];\n        \n        // singular form elements just have one value\n        formData[name] = element.value;\n  \n        // when our element has multiple items, get their values\n        if (element.length) {\n          var data = [];\n          for (var i = 0; i < element.length; i++) {\n            var item = element.item(i);\n            if (item.checked || item.selected) {\n              data.push(item.value);\n            }\n          }\n          formData[name] = data.join(', ');\n        }\n      });\n  \n      // add form-specific values into the data\n      formData.formDataNameOrder = JSON.stringify(fields);\n      formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n      formData.formGoogleSendEmail\n        = form.dataset.email || \"\"; // no email by default\n  \n      return {data: formData, honeypot: honeypot};\n    }\n  \n    function handleFormSubmit(event) {  // handles form submit without any jquery\n      event.preventDefault();           // we are submitting via xhr below\n      var form = event.target;\n      var formData = getFormData(form);\n      var data = formData.data;\n  \n      // If a honeypot field is filled, assume it was done so by a spam bot.\n      if (formData.honeypot) {\n        return false;\n      }\n  \n      disableAllButtons(form);\n      var url = form.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      // xhr.withCredentials = true;\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            form.reset();\n            var formElements = form.querySelector(\".form-elements\")\n            if (formElements) {\n              formElements.style.display = \"none\"; // hide form\n            }\n            // var thankYouMessage = form.querySelector(\".thankyou_message\");\n            // if (thankYouMessage) {\n            //   thankYouMessage.style.display = \"block\";\n            // }\n            alert(\"Thank you for your email. I will get back to you soon :)\");\n          }\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data).map(function(k) {\n          return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n      }).join('&');\n      xhr.send(encoded);\n    }\n    \n    function loaded() {\n      // bind to the submit event of our form\n      var forms = document.querySelectorAll(\"form.gform\");\n      for (var i = 0; i < forms.length; i++) {\n        forms[i].addEventListener(\"submit\", handleFormSubmit, false);\n      }\n    };\n    document.addEventListener(\"DOMContentLoaded\", loaded, false);\n  \n    function disableAllButtons(form) {\n      var buttons = form.querySelectorAll(\"button\");\n      for (var i = 0; i < buttons.length; i++) {\n        buttons[i].disabled = true;\n      }\n    }\n  })();",{"ruleId":"31","severity":1,"message":"32","line":45,"column":13,"nodeType":"33","endLine":54,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":160,"column":1,"nodeType":"36","messageId":"37","endLine":183,"endColumn":6},{"ruleId":"38","severity":1,"message":"39","line":215,"column":17,"nodeType":"40","messageId":"41","endLine":215,"endColumn":23},{"ruleId":"38","severity":1,"message":"39","line":229,"column":17,"nodeType":"40","messageId":"41","endLine":229,"endColumn":23},{"ruleId":"38","severity":1,"message":"39","line":238,"column":17,"nodeType":"40","messageId":"41","endLine":238,"endColumn":23},{"ruleId":"38","severity":1,"message":"39","line":251,"column":17,"nodeType":"40","messageId":"41","endLine":251,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":13,"column":14,"nodeType":"44","messageId":"45","endLine":13,"endColumn":22},{"ruleId":"46","severity":1,"message":"47","line":21,"column":35,"nodeType":"48","messageId":"49","endLine":21,"endColumn":37},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]