[{"/Users/Densie/Documents/React/portfolio/src/reportWebVitals.js":"1","/Users/Densie/Documents/React/portfolio/src/App.js":"2","/Users/Densie/Documents/React/portfolio/src/pages.js":"3","/Users/Densie/Documents/React/portfolio/src/index.js":"4","/Users/Densie/Documents/React/portfolio/src/form-submission-handler.js":"5"},{"size":362,"mtime":1610089377020,"results":"6","hashOfConfig":"7"},{"size":851,"mtime":1610337903086,"results":"8","hashOfConfig":"7"},{"size":13891,"mtime":1610339281667,"results":"9","hashOfConfig":"7"},{"size":318,"mtime":1610140685564,"results":"10","hashOfConfig":"7"},{"size":3691,"mtime":1610337481712,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9aapnl",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/Densie/Documents/React/portfolio/src/reportWebVitals.js",[],"/Users/Densie/Documents/React/portfolio/src/App.js",[],"/Users/Densie/Documents/React/portfolio/src/pages.js",["24","25","26","27","28","29"],"import React, { useState } from \"react\"\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport useSound from 'use-sound';\nimport boopSfx from './sounds/Windows_XP_Startup.mp3';\nimport springprojectpic from './images/springboot.png';\nimport mlprojectpic from './images/watermelon.png';\nimport mypicture from './images/denise.jpeg';\nimport './form-submission-handler.js'\n/**\n * TODO add function to move window \n */\nexport function Loading(props) {\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/signup')\n    }\n\n    setTimeout(() => {\n        routeChange()\n    }, 1000)\n\n    return (\n        <>\n        <Jumbotron id=\"loading\">\n\n        </Jumbotron>\n        </>\n    );\n}\n\nexport function Signup() {\n    const [play] = useSound(\n        boopSfx,\n      { volume: 0.5 }\n    );\n\n    return (\n        <>\n        <Container id=\"signup\">\n            <Row id=\"user\">\n\n            <a\n            href=\"#\"\n            title=\"Signin\"\n            role=\"button\"\n            onClick={() => {\n                play();\n                setTimeout(() => {\n                    window.location.href=\"/home\"\n                }, 3500)\n            }}>\n                <span></span>Denise Lee\n            </a>\n            </Row>\n        </Container>\n        </>\n    )\n}\n\nexport function Home() {\n    return (\n        <>\n        <Container>\n            <div className=\"main_icons_container\">\n            <ul id=\"main_icons\">\n                <li id=\"my_computer\">\n                    <a\n                    style={{textShadow: '0.5px 0.5px black'}}\n                    href=\"/home/myprofile\"\n                    title=\"Shows Denise's profile\"\n                    ><span></span>Denise Lee</a\n                    >\n                </li>\n                <li id=\"my_documents\">\n                    <a\n                    href=\"/home/myprojects\"\n                    title=\"Show Denise's projects.\"\n                    ><span></span>My Projects</a\n                    >\n                </li>\n                <li id=\"contactme\">\n                    <a\n                    href=\"/home/emailme\"\n                    title=\"Shows shortcuts to Web sites, network computers, and FTP sites.\"\n                    ><span></span>Contact Me</a\n                    >\n                </li>\n                {/* <li id=\"terminal\">\n                    <a href=\"/home/terminal\" title=\"Contains the files and folders you have deleted.\"\n                    ><span></span>Terminal</a\n                    >\n                </li> */}\n                <li id=\"github\">\n                    <a href=\"https://github.com/LeeDenise\" target=\"_blank\" title=\"My GitHub\" rel=\"noreferrer\"\n                    ><span></span>GitHub</a\n                    >\n                </li>\n                <li id=\"linkedin\">\n                    <a href=\"https://www.linkedin.com/in/dohui-denise-lee/\" target=\"_blank\" title=\"My Linked In\" rel=\"noreferrer\"\n                    ><span></span>Linked In</a\n                    >\n                </li>\n                <li id=\"recycle_bin\">\n                    <a href=\"/home\" title=\"Contains the files and folders you have deleted.\"\n                    ><span></span>Recycle Bin</a\n                    >\n                </li>\n            </ul>\n            </div> {/* end of main_icons_container */}\n            <Row id=\"desktop\">\n                <Outlet />\n            </Row>\n            <Row id=\"footer\" className=\"taskbar\">\n                <h2 id=\"startbutton\">\n                    <a href=\"/home\" title=\"Click here to begin\"\n                        ><span id=\"startbuttongraphic\"></span></a\n                    >\n                </h2>\n            </Row>\n        </Container>\n        </>\n    );\n}\n\nexport function Calculator(props) {\n    const [count, setCount] = useState(0);\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/home')\n    }\n\n    return (\n        <div className=\"calculator\">\n            <div style={{ width: 300 }} className=\"window\">\n              <div className=\"title-bar\">\n                <div className=\"title-bar-text\">Counter</div>\n                <div className=\"title-bar-controls\">\n                  <button aria-label=\"Minimize\" />\n                  <button aria-label=\"Maximize\" />\n                  <button aria-label=\"Close\" onClick={ routeChange }></button>\n                </div>\n              </div>\n      \n              <div className=\"window-body\">\n                <p style={{ textAlign: \"center\" }}>Current count: {count}</p>\n                <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                  <button onClick={() => setCount(count + 1)}>+</button>\n                  <button onClick={() => setCount(count - 1)}>-</button>\n                  <button onClick={() => setCount(0)}>0</button>\n                </div>\n              </div>\n            </div>\n        </div>\n    );\n}\n\n{/* export function Terminal(props) {\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/home')\n    }\n\n    const stringToShow =\n        'Microsoft&#10094;R&#10095; Windows DOS\\n&#10094;C&#10095; Copyright Microsoft Corp 1990-2001.\\nC:&#92;WINDOWS&#92;SYSTEM32> |'\n    return (\n        <div style={{ height: 500, backgroundColor: 'black' }} className=\"window\">\n        <div className=\"title-bar\">\n                <div className=\"title-bar-text\">Command Prompt</div>\n                <div className=\"title-bar-controls\">\n                    <button aria-label=\"Minimize\" />\n                    <button aria-label=\"Maximize\" />\n                    <button aria-label=\"Close\" onClick={ routeChange } />\n                </div>\n            </div>\n            <div style={{ height: 300 }} className=\"window-body\">\n                <pre>{stringToShow}</pre>\n            </div>\n        </div>\n    );\n} */}\n\nexport function MyProjects(props) {\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/home')\n    }\n    const [project, setProject] = useState('tab-1');    \n    const [ariaSelected1, setAriaSelected1] = useState(null);\n    const [ariaSelected2, setAriaSelected2] = useState(null);\n    const [ariaSelected3, setAriaSelected3] = useState(null);\n\n    function SwitchDisplay(props) {     \n        \n        setAriaSelected1('false')\n        setAriaSelected2('false')\n        setAriaSelected3('false')\n\n        switch (project) {\n            case 'tab-1':\n                setAriaSelected1('true')\n                return (\n                    <article role=\"tabpanel\" id=\"tab-1\">\n                    <a style={{color: \"black\"}} href=\"https://denise-springboot.herokuapp.com/\" target=\"_blank\" rel=\"noreferrer\">\n                        <h3>Spring Rehabilitation Center</h3>\n                        <img style={{width: \"100%\"}} src={springprojectpic} alt=\"springboot project homepage\"/>\n                    </a>\n                    <p>\n                        Spring Rehabilitation Center is a web application for the hospital staff and the patients. Patients can make a booking with a therapist when they want. The admin user can manage the appoints and the information of patients and employees.\n                    </p>\n                    </article>\n                );\n                break;\n            case 'tab-2':\n                setAriaSelected2('true')\n                return (\n                    <article role=\"tabpanel\" id=\"tab-2\">\n                        <a style={{color: \"black\"}} href=\"https://isthiskoreanwatermelon.netlify.app/\" target=\"_blank\" rel=\"noreferrer\">\n                            <h3>Machine Learning</h3>\n                            <img style={{width: \"100%\"}} src={mlprojectpic} alt=\"korean watermelone recongnition site\"/>\n                        </a>\n                        <p>\n                            An image recognition website that can tell the fruit on the webcam is Korean watermelon or not. This project is made of Google Teachable Machine to recognize images.                        \n                        </p>\n                    </article>\n                );\n                break;\n            case 'tab-3':\n                setAriaSelected3('true')\n                return (\n                    <article role=\"tabpanel\" id=\"tab-3\">\n                        <h3>Tab 3</h3>\n                        <p>Lorem Ipsum Dolor Sit</p>\n                    </article>\n                );\n                break;\n            default:\n                setAriaSelected1('true')\n                return (\n                    <article role=\"tabpanel\" id=\"tab-1\">\n                    <h3>Tab Content</h3>\n                    <p>\n                        You create the tabs, you would use a <code>menu role=\"tablist\"</code> element then for the tab titles you use a <code>button</code> with the <code>aria-controls</code> parameter set to match the relative <code>role=\"tabpanel\"</code>'s element.\n                    </p>\n                    <p>\n                    </p>\n                    </article>\n                );\n                break;\n        }\n    }\n\n    return (\n        <div className=\"window\" style={{width: '900px', height: '650px'}}>\n        <div className=\"title-bar\">\n          <div className=\"title-bar-text\">My Projects</div>\n          <div className=\"title-bar-controls\">\n            <button aria-label=\"Minimize\" />\n            <button aria-label=\"Maximize\" />\n            <button aria-label=\"Close\" onClick={ routeChange }/>\n          </div>\n        </div>\n        <div className=\"window-body\">\n            <section className=\"tabs\" style={{ maxWidth: '900px', maxHeight:'630px' }}>\n                <menu role=\"tablist\" aria-label=\"Sample Tabs\">\n                    <button role=\"tab\" aria-selected= {ariaSelected1} aria-controls=\"tab-1\" onClick={() => setProject('tab-1')}>Spring Rehabilitation Center</button>\n                    <button role=\"tab\" aria-selected= {ariaSelected2} aria-controls=\"tab-2\" onClick={() => setProject('tab-2')}>Machine Learning</button>\n                    <button role=\"tab\" aria-selected= {ariaSelected3} aria-controls= \"tab-3\" onClick={() => setProject('tab-3')}>Job Searching</button>\n                </menu>\n                <SwitchDisplay value={ project } />\n            </section>\n        </div>\n      </div>\n    );\n}\n\nexport function EmailMe(props) {\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/home')\n    }\n\n    return (\n        <div className=\"window\" style={{width: '400px', height:'650px'}}>\n            <div className=\"title-bar\">\n                <div className=\"title-bar-text\">Email Me</div>\n                <div className=\"title-bar-controls\">\n                    <button aria-label=\"Minimize\" />\n                    <button aria-label=\"Maximize\" />\n                    <button aria-label=\"Close\" onClick = { routeChange } />\n                </div>\n            </div>\n            <form className=\"gform\" method=\"POST\" action=\"https://script.google.com/macros/s/AKfycbxraU8ELTSaadN6YijAFcRrIfum6y28XAUTE_WBx5fZi3Inkld0o0uCeg/exec\">\n                <div className=\"window-body\">\n                    <div className=\"field-row-stacked\" style={{width: '380px'}}>\n                        <label htmlFor=\"text22\"> Name</label>\n                        <input name=\"name\" id=\"text22\" type=\"text\" />\n                    </div>\n                    <div className=\"field-row-stacked\" style={{width: '380px'}}>\n                        <label htmlFor=\"text22\"> Email</label>\n                        <input name=\"email\" id=\"text22\" type=\"text\" />\n                    </div>\n                    <div className=\"field-row-stacked\" style={{width: '380px'}}>\n                        <label htmlFor=\"text23\">Subject</label>\n                        <input name=\"subject\" id=\"text23\" type=\"text\" />\n                    </div>\n                    <div className=\"field-row-stacked\" style={{width: '380px'}}>\n                        <label htmlFor=\"text24\">Message</label>\n                        <textarea name=\"message\" id=\"text24\" rows={32} defaultValue={\"\"} />\n                    </div>\n                </div>\n                <button type=\"submit\" style={{marginRight: '10px', marginTop:'10px', float:'right'}}>Send</button>\n            </form>\n\n        </div>\n\n    );\n}\n\nexport function Myprofile (props) {\n    const navigate = useNavigate();\n    const routeChange = () => {\n        navigate('/home')\n    }\n\n    return (\n        <div className=\"window\" style={{width: '400px'}}>\n            <div className=\"title-bar\">\n            <div className=\"title-bar-text\">Who am I?</div>\n            <div className=\"title-bar-controls\">\n                <button aria-label=\"Minimize\" />\n                <button aria-label=\"Maximize\" />\n                <button aria-label=\"Close\" onClick = { routeChange } />\n            </div>\n            </div>\n            <div className=\"window-body\">\n                <h4 style={{textAlign: \"center\"}}>Hello world!</h4>\n                <img style={{borderRadius: \"50px\", width: \"50%\", marginLeft: \"auto\", marginRight: \"auto\", display:\"block\"}} src={mypicture} alt=\"korean watermelone recongnition site\"/>\n                <p style={{fontSize: \"small\", textAlign: \"center\"}}> Hi! My name is <strong>Denise Lee</strong>. I'm a student in software development at Southern Alberta Institute of Technology. I'm a forwarding-looking person who has a responsibility and open to new ideas with various forms of input. I enjoy every step of the development from discussion and collaboration to coding.\n                </p>\n                <button style={{marginLeft: \"auto\", marginRight: \"auto\", display: \"block\"}}>\n                   <a href=\"/home/emailme\" style={{color: \"black\"}}>Contact me</a> \n                </button>\n            </div>\n      </div>\n    );\n}\n","/Users/Densie/Documents/React/portfolio/src/index.js",[],"/Users/Densie/Documents/React/portfolio/src/form-submission-handler.js",["30","31"],"(function() {\n    // get all data in form and return object\n    function getFormData(form) {\n      var elements = form.elements;\n      var honeypot;\n  \n      var fields = Object.keys(elements).filter(function(k) {\n        if (elements[k].name === \"honeypot\") {\n          honeypot = elements[k].value;\n          return false;\n        }\n        return true;\n      }).map(function(k) {\n        if(elements[k].name !== undefined) {\n          return elements[k].name;\n        // special case for Edge's html collection\n        }else if(elements[k].length > 0){\n          return elements[k].item(0).name;\n        }\n      }).filter(function(item, pos, self) {\n        return self.indexOf(item) == pos && item;\n      });\n  \n      var formData = {};\n      fields.forEach(function(name){\n        var element = elements[name];\n        \n        // singular form elements just have one value\n        formData[name] = element.value;\n  \n        // when our element has multiple items, get their values\n        if (element.length) {\n          var data = [];\n          for (var i = 0; i < element.length; i++) {\n            var item = element.item(i);\n            if (item.checked || item.selected) {\n              data.push(item.value);\n            }\n          }\n          formData[name] = data.join(', ');\n        }\n      });\n  \n      // add form-specific values into the data\n      formData.formDataNameOrder = JSON.stringify(fields);\n      formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n      formData.formGoogleSendEmail\n        = form.dataset.email || \"\"; // no email by default\n  \n      return {data: formData, honeypot: honeypot};\n    }\n  \n    function handleFormSubmit(event) {  // handles form submit without any jquery\n      event.preventDefault();           // we are submitting via xhr below\n      var form = event.target;\n      var formData = getFormData(form);\n      var data = formData.data;\n  \n      // If a honeypot field is filled, assume it was done so by a spam bot.\n      if (formData.honeypot) {\n        return false;\n      }\n  \n      disableAllButtons(form);\n      var url = form.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      // xhr.withCredentials = true;\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            form.reset();\n            var formElements = form.querySelector(\".form-elements\")\n            if (formElements) {\n              formElements.style.display = \"none\"; // hide form\n            }\n            // var thankYouMessage = form.querySelector(\".thankyou_message\");\n            // if (thankYouMessage) {\n            //   thankYouMessage.style.display = \"block\";\n            // }\n            alert(\"Thank you for your email. I will get back to you soon :)\");\n          }\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data).map(function(k) {\n          return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n      }).join('&');\n      xhr.send(encoded);\n    }\n    \n    function loaded() {\n      // bind to the submit event of our form\n      var forms = document.querySelectorAll(\"form.gform\");\n      for (var i = 0; i < forms.length; i++) {\n        forms[i].addEventListener(\"submit\", handleFormSubmit, false);\n      }\n    };\n    document.addEventListener(\"DOMContentLoaded\", loaded, false);\n  \n    function disableAllButtons(form) {\n      var buttons = form.querySelectorAll(\"button\");\n      for (var i = 0; i < buttons.length; i++) {\n        buttons[i].disabled = true;\n      }\n    }\n  })();",{"ruleId":"32","severity":1,"message":"33","line":45,"column":13,"nodeType":"34","endLine":54,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":160,"column":1,"nodeType":"37","messageId":"38","endLine":183,"endColumn":6},{"ruleId":"39","severity":1,"message":"40","line":215,"column":17,"nodeType":"41","messageId":"42","endLine":215,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":229,"column":17,"nodeType":"41","messageId":"42","endLine":229,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":238,"column":17,"nodeType":"41","messageId":"42","endLine":238,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":251,"column":17,"nodeType":"41","messageId":"42","endLine":251,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":13,"column":14,"nodeType":"45","messageId":"46","endLine":13,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":21,"column":35,"nodeType":"49","messageId":"50","endLine":21,"endColumn":37},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]